*,
*::before,
*::after {
    box-sizing: border-box;   
}



/*root es una regla que le va a aplicar estilos a la raiz de nuestro documento, pero 
lo que queremos hacer es acceder a la raiz del documento para crear variables*/

/* Custom Properties for the design */

:root {
    --ff-primary: 'Source Sans Pro', sans-serif;
    --ff-secondary: 'Source Code Pro', monospace;

    --fw-reg: 300;
    --fw-bold: 900;

    --clr-light: #fff;
    --clr-dark: #303030;
    --clr-accent: #16e0bd;
    
    --fs-h1: 3rem;
    --fs-h2: 2.25rem;
    --fs-h3: 1.25rem;
    --fs-body: 1rem;

    --bs: 0.25em 0.25em 0.75em rgba(0,0,0,.25),
          0.125em 0.125em 0.25em rgba(0,0,0,.15):
}

@media (min-width: 800px) {
    :root {
        --fs-h1: 4.5rem;
        --fs-h2: 3.75rem;
        --fs-h3: 1.5rem;
        --fs-body: 1.125rem;
    }
}


/* General Styles */

html {
    scroll-behavior: smooth;
}

body {
    background: var(--clr-light);
    color: var(--clr-dark);
    margin: 0;
    font-family: var(--ff-primary);
    font-size: var(--fs-body);
    line-height: 1.6;
}

section {
    padding: 5em 2em;
}

img {
    display: block; /*it gets rid of some issues that can come up with images*/
    max-width: 100%; /*so that they don't grow bigger and overflow the size of their parents*/
}

strong {
    font-weight: var(--fw-bold);
}

:focus {
    outline: 3px solid var(--clr-accent);
    outline-offset: 3px;
}

/* Buttons */

.btn {
    display: inline-block;
    padding: .5em 2.5em;
    background: var(--clr-accent);
    color: var(--clr-dark);
    text-decoration: none;
    cursor: pointer;
    font-size: .8rem;
    text-transform: uppercase;
    letter-spacing: 2px;
    font-weight: var(--fw-bold);
    transition: transform 200ms ease-in-out;
}

.btn:hover {
    transform: scale(1.1);
}

/* Typography */

h1, h2, h3 {
    line-height: 1;
    margin: 0; /*for the headings it's better to get rid of the margins*/
}

h1 {
    font-size: var(--fs-h1);
}
h2 {
    font-size: var(--fs-h2);
}
h3 {
    font-size: var(--fs-h3)
}

.section__title {
    margin-bottom: .25em; /*use margins and paddings on text using 'em', because in that way is relative to the font size*/
}

.section__title--intro {
    font-weight: var(--fw-reg);
}

.section__subtitle--intro strong {
    display: block; /*so that the strong text always displays on its own line instead of sometimes being on a different line*/
}

.section__subtitle {
    margin: 0;
    font-size: var(--fs-h3);
}

.section__subtitle--intro,
.section__subtitle--about {
    background: var(--clr-accent);
    padding: .25em 1em;
    font-family: var(--ff-secondary);
    margin-bottom: 2em;
}

/* Header*/

/*
nav {
    display: none;
} commented it since now at the end I will start working on the nav*/
header {
    display: flex; /*because we want that to be on the left and we want our button to be on the right*/
    justify-content: space-between;
    padding: 1em;
}   

.logo {
    max-width: 250px;
}

.nav {
    position: fixed;
    background: var(--clr-dark);
    color: var(--clr-light);
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 100;

    transform: translateX(100%);
    transition: transform 250ms cubic-bezier(.5, 0, .5, 1);
}

.nav__list {
    list-style: none;
    display: flex;
    height: 100%;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    margin: 0;
    padding: 0;
}

.nav__link {
    color: inherit;
    font-weight: var(--fw-bold);
    font-size: var(--fs-h2);
    text-decoration: none;
}

.nav__link:hover {
    color: var(--clr-accent);
}

.nav-toggle {
    padding: .5em;
    background: transparent;
    border: 0;
    cursor: pointer;
    position: absolute;
    right: 1em;
    top: 1em;
    z-index: 1000;
}


.nav-open .nav {
    transform: translateX(0); /*menu from hamburger slides out and back in*/
}

.nav-open .nav-toggle {
    position: fixed;
}

.nav-open .hamburger {
    transform: rotate(.625turn);
}

.nav-open .hamburger::before{
    transform: rotate(90deg) translateX(-6px);
}
.nav-open .hamburger::after {
    opacity: 0;
}


.hamburger {
    display: block; 
    position: relative; /*because we will be using pseudo elements with absolute position and this will make our lives easier*/
}

.hamburger,
.hamburger::before,
.hamburger::after {
    background: var(--clr-dark);
    width: 2em;
    height: 3px;
    border-radius: 1em;
    transition: transform 250ms ease-in-out;
}

.hamburger::before,
.hamburger::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
}

.hamburger::before {
    top: 6px;
}

.hamburger::after {
    bottom: 6px;
}

/* Intro section */

.intro {
    position: relative;
}

.intro__img {
    /*box-shadow: var(--bs);*/
    box-shadow: 10px 5px 5px #878787;
}

.section__subtitle--intro {
    display: inline-block; /*this will set the width to be the size of itself*/
}

@media (min-width: 600px) {
    .intro {
        display: grid;
        width: min-content;
        margin: 0 auto; /*this way it should match the width of the whole div, and the 0 auto will keep it centered*/
        grid-column-gap: 1em;
        grid-template-areas: 
            "img title"
            "img subtitle";
        grid-template-columns: min-content max-content;
    }
    .intro__img {
        grid-area: img;
        min-width: 250px;
        position: relative;
        z-index: 2;
    }

    .section__subtitle--intro {
        align-self: start;
        grid-column: -1 / 1;
        grid-row: 2;
        text-align: right;
        position: relative;
        left: -1.5em;
        width: calc(100% + 1.5em);
    }
}

/* My Services section */

.my-services {
    background-color: var(--clr-dark); /*in case background image fails is good to set a background color*/
    background-image: url(../img/services-bg.jpg);
    background-size: cover;
    /*background-blend-mode: multiply;*/
    color: var(--clr-light);
    text-align: center;
}

.section__title--services {
    color: var(--clr-accent);
    position: relative; 
}

.section__title--services::after {
    content: ''; /*pseudo elements you need to give them a content or they will not appear*/
    display: block;
    width: 25%;
    height: 1px;
    margin: 0.5em auto 1em;
    /*background: currentColor; ---> this will match the color of the class for title services*/
    background: var(--clr-light);
    opacity: 0.25;
}

.services {
    margin-bottom: 4em;
}

.service {
    max-width: 500px;
    margin: 0 auto;
}


@media (min-width: 800px) {
    .services {
        display: flex; /*we need to break the text to columns for bigger screens*/
        max-width: 1000px;
        margin-left: auto;
        margin-right: auto; /*changed margin 0 auto to margin auto left and right, since before margin was dissapearing, so that now it sits at the same space all the time */

    }  

    .service + .service { /*this plus sign means it will affect the siblings*/
        margin-left: 2em; /*it's like adding a gap between them to the left*/

    }
}

.about-me {
    max-width: 1000px; /*the same as the section above*/
    margin: 0 auto; /*to keep it centered*/

}

.about-me__img {
    box-shadow: var(--bs);
}

@media (min-width: 600px) {
    .about-me {
        display: grid;
        grid-template-columns: 1fr 200px;
        grid-template-areas: 
            "title img"
            "subtitle img"
            "text img";
        grid-column-gap: 2em;
    }

    .section__title--about {
        grid-area: title;
    }

    .section__subtitle--about {
        grid-column: 1 / -1;
        grid-row: 2;
        position: relative;
        left: -1em;
        width: calc(100% + 2em);
        padding-left: 1em;
        padding-right: calc(200px + 4em);
    }

    .about-me__img {
        grid-area: img;
        position: relative;
        z-index: 2; /*so that img is on top of green bar*/
        /*grid-row: 1 / -1; starting at the top and ending at the last row automatically
        grid-column: 2;*/
        box-shadow: 10px 5px 5px #878787; /*--bs from root won't work*/
    }
}

/* My Work */
/* now for my work section we keep using grid and we shouldn't need any media querie for this one*/

.my-work {
    background-color: var(--clr-dark);
    color: var(--clr-light);
    text-align: center;

}

.section__subtitle--work {
    color: var(--clr-accent);
    font-weight: var(--fw-bold);
    margin-bottom: 2em;
}

.portfolio {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /*repeat(3, 1fr)will automatically make 3 columns*/
    /* max-width with margin 0 auto could be use */
}

.portfolio__item {
    background: var(--clr-accent);
    overflow: hidden;
}

.portfolio__img {
    transition: 
        transform 750ms cubic-bezier(.5, 0, .5, 1),
        opacity 250ms linear;
}

.portfolio__item:focus {
    position: relative;
    z-index: 2;
}

.portfolio__img:hover,
.portfolio__item:focus .portfolio__img {
    transform: scale(1.2);
    opacity: .75;
}


svg {
    width: 50px;
    height: auto;
}

/* Footer */

.footer {
    background: rgb(37, 37, 37);
    color: var(--clr-accent);
    text-align: center;
    padding: 2.5em 0;
    font-size: var(--fs-h3);
}

.footer a {
    color: inherit;
    text-decoration: none;
}

.footer__link {
    font-weight: var(--fw-bold);
}

.footer__link:hover,
.social-list__link:hover {
    opacity: .7;
}

.footer__link:hover {
    text-decoration: underline;
}

.social-list {
    list-style: center;
    display: flex;
    justify-content: center;
    margin: 2em 0 0;
    padding: 0;
}

li {
    list-style-type: none;
}

.social-list__items {
    margin: 0 .5em;
}

.social-list__link {
    padding: .5em;
}


/* Individual portfolio item styles (text should be all the info about the project) */

.portfolio-item-individual {
    padding: 0 2em 2em;
    max-width: 1000px;
    margin: 0 auto;
}

.portfolio-item-individual p {
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
}